{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","images/covid-19.png","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9298b2ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1wJXn\",\"card\":\"Cards_card__1yMtE\",\"infected\":\"Cards_infected__3Xid6\",\"recovered\":\"Cards_recovered__2dRNT\",\"deaths\":\"Cards_deaths__2cMr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Qa2p\",\"image\":\"App_image__2hdiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3GALO\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19.d7265326.png\";","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try{\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    // as we are passing this array object so inside map, ({}) this way\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n\r\n  } catch(error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try{\r\n    const { data: { countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map( (country) => country.name);\r\n  } catch(error){\r\n    console.log(error)\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          handleCountryChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport { Cards, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/covid-19.png';\r\n\r\nclass App extends React.Component{\r\n  \r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData })\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    // fetch data\r\n    const fetchedData = await fetchData(country)\r\n\r\n    // set the state\r\n    this.setState({data: fetchedData, country: country})\r\n  }\r\n\r\n  render(){\r\n\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={coronaImage} className={styles.image} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}